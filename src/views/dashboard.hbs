<div class="row">
  <div class="col-12 col-sm-6 col-md-3">
    <div class="info-box bg-success text-white">
      <span class="info-box-icon elevation-1"><i class="fas fa-percentage"></i></span>
      <div class="info-box-content">
        <span class="info-box-text">Porc. Candidato</span>
        <h1 id="porc">{{myPorc}}</h1>
      </div>
    </div>
  </div>

  <div class="col-12 col-sm-6 col-md-3">
    <div class="info-box bg-warning text-white">
      <span class="info-box-icon elevation-1"><i class="fas fa-hand-point-down"></i></span>
      <div class="info-box-content">
        <span class="info-box-text">Total Votos</span>
        <h1>{{sumVotos}}</h1>
      </div>
    </div>
  </div>

  <div class="col-12 col-sm-6 col-md-3">
    <div class="info-box bg-danger text-white">
      <span class="info-box-icon elevation-1"><i class="fas fa-broadcast-tower"></i></span>
      <div class="info-box-content">
        <span class="info-box-text">Mesas Reportadas</span>
        <h1>{{totMesas}}</h1>
      </div>
    </div>
  </div>

  <div class="col-12 col-sm-6 col-md-3">
    <div class="info-box bg-primary text-white">
      <span class="info-box-icon elevation-1"><i class="fas fa-chart-line"></i></span>
      <div class="info-box-content">
        <span class="info-box-text">Porcentage Escrutado</span>
        <h1>{{totEscrutado}}</h1>
      </div>
    </div>
  </div>
</div>

<div class="row">
  <div class="col-md-4">
    <div class="row">
      <div class="col-md-12">
        <div class="card">
          <div class="card-header" style="background-color: rgba(232, 240, 254, 0.90)">
            <i class="fas fa-chart-bar text-success mr-1"></i><strong id="title">Resultados por Candidato</strong>
          </div>
          <div class="card-body">
            <canvas id="BarChartResult" style="min-height: 450px; height: 450px; max-height: 450px; max-width: 100%;">
            </canvas>
          </div>
        </div>
      </div>
    </div>
  </div>

  <div class="col-md-8">
    <div class="card mb-12 ">
      <div class="card-header d-flex align-items-center" style="background-color: rgba(232, 240, 254, 0.90)">
        <i class="fas fa-chart-bar text-success mr-1"></i><strong>Resultados por Puestos</strong>
        <div class="d-flex align-items-center ml-auto">
          <font size=2>
            <select class="custom-select" name="codmpio" id="codmpio" onchange="actualizaGrafico()"
              style="height: 25px; font-size: 10px;">
              <option selected value="17019">Todos</option>
              {{#each puestos }}
              <option value="{{codigo}}">{{nombpuesto}}</option>
              {{/each }}
            </select>
          </font>

          <div class="col-6 text-right">
            <input id="porcentaje" class="form-check-input" name="porcentaje" type="checkbox" value="1" checked>Porc(%)
          </div>
        </div>
      </div>

      <div class="card-body">
        <canvas id="BarChart" style="min-height: 450px; height: 450px; max-height: 450px; max-width: 100%;"></canvas>
      </div>
    </div>
  </div>
</div>

<script src="/js/chart.js"></script>
<script>
  // Dashboar para el municipio de Acacias 
  let labelPuestos = [];
  let codigoPuestos = [];
  const codCandidatos = {{{ jCandidato }}};
  const votosCandidatos = {{{ jVotos }}};
  const nombMunicipios = {{{ namePtosVotacion }}};
  const votosMpios = {{{ resulPuestos }}};
  let resultPorCandidatos;
  let opc = '';

  for (var i in nombMunicipios) {
    labelPuestos.push(nombMunicipios[i].nombpuesto.toLowerCase().substring(0, 20));
    codigoPuestos.push(nombMunicipios[i].codigo);
  }

  const sumaTotal = votosCandidatos.reduce((total, elemento) => total + elemento, 0);
  const porcCandidatos = votosCandidatos.map(elemento => ((elemento / sumaTotal) * 100).toFixed(2));
  resultPorCandidatos = porcCandidatos;

  const myCheckbox = document.getElementById('porcentaje');
  myCheckbox.addEventListener('change', function () {
    if (this.checked) {
      this.value = '1';
    } else {
      this.value = '0';
    }
    opc = this.value;
    actualizaGrafico();
  });

  const mycytes = document.getElementById('codmpio');
  var bgcolor = [];

  for (i = 0; i <= 21; i++) {
    var color1 = Math.floor(Math.random() * 256);
    var color2 = Math.floor(Math.random() * 256);
    var color3 = Math.floor(Math.random() * 256);
    bgcolor.push(`rgba(${color1},${color2},${color3},0.8)`);
  }

  // Bar Chart Example
  var ctxResult = document.getElementById('BarChartResult').getContext('2d');
  var myGraphResult = new Chart(ctxResult, {
    type: 'bar',
    data: {
      labels: codCandidatos,
      datasets: [{
        label: 'valor',
        backgroundColor: bgcolor,
        data: resultPorCandidatos,
      }],
    },
    options: {
      legend: {
        display: false
      }
    }
  });

  // Configuración del gráfico
  var ctxDatos = document.getElementById('BarChart').getContext('2d');
  const data = {
    labels: labelPuestos,
    datasets: []
  };

  // Agregar los datos de cada candidato a los datasets
  for (let i = 0; i < codCandidatos.length; i++) {
    const dataset = {
      label: codCandidatos[i],
      data: votosMpios.map(row => row[i]),
      backgroundColor: bgcolor[i]
    };

    data.datasets.push(dataset);
  }

  const options = {
    responsive: true,
    scales: {
      x: {
        stacked: true
      },
      y: {
        stacked: true
      }
    }
  };

  // Crear el gráfico de barras
  const chart = new Chart(ctxDatos, {
    type: "bar",
    data: data,
    options: options
  });

  function actualizaGrafico() {
    const myPuestos = document.getElementById('codmpio');
    var myCodPuesto = myPuestos.value;

    if (myCodPuesto !== '17019') {
      const posicion = codigoPuestos.indexOf(myCodPuesto);
      const nombPuesto = nombMunicipios[posicion].nombpuesto;

      var myTitle = document.getElementById('title');
      myTitle.innerHTML = `Resultados  ${nombPuesto}`;

      const arrayAux = votosMpios[posicion];
      const sumaMpio = arrayAux.reduce((total, elemento) => total + elemento, 0);
      const porcMunicipio = arrayAux.map(elemento => ((elemento / sumaMpio) * 100).toFixed(2));

      if (opc === '0') {
        resultPorCandidatos = votosMpios[posicion];
      } else {
        resultPorCandidatos = porcMunicipio;
      }

      myGraphResult.data.datasets[0].data = resultPorCandidatos;
      myGraphResult.update();
    } else {
      var myTitle = document.getElementById('title');
      myTitle.innerHTML = 'Resultados por Candidato';

      if (opc === '0') {
        resultPorCandidatos = votosCandidatos;
      } else {
        resultPorCandidatos = porcCandidatos;
      }

      myGraphResult.data.datasets[0].data = resultPorCandidatos;
      myGraphResult.update();
    }
  }

  function refreshPage() {
    location.reload(); // Esto recargará la página actual
  }

  // Establece un temporizador para llamar a refreshPage cada 3 minutos (3 * 60,000 milisegundos)
  setInterval(refreshPage, 3 * 60 * 1000);
</script>